local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({    Name = "| [UPDATE OUT NOW] Olympus",    Icon = 134461174841260,    LoadingTitle = "[UPDATE OUT NOW] Olympus",    LoadingSubtitle = "Loading Exploits.. <3",    ConfigurationSaving = {        Enabled = true,        FolderName = nil,        FileName = "OLYMPUS HUB"    }, 
Theme = {    -- Font & Text    TextFont = "Gotham", -- Clean and modern font    TextColor = Color3.fromRGB(255, 255, 255), -- White text for readability    PlaceholderColor = Color3.fromRGB(120, 120, 170), -- Softer placeholder text
    -- Main Backgrounds    Background = Color3.fromRGB(20, 20, 20), -- Dark general background    Topbar = Color3.fromRGB(30, 30, 30), -- Slightly lighter topbar    Shadow = Color3.fromRGB(10, 10, 10), -- Subtle shadow
    -- Notifications    NotificationBackground = Color3.fromRGB(25, 25, 25), -- Matches the topbar    NotificationActionsBackground = Color3.fromRGB(35, 35, 35), -- Slightly brighter for contrast
    -- Tabs    TabBackground = Color3.fromRGB(35, 35, 35), -- Default tab background    TabStroke = Color3.fromRGB(50, 50, 50), -- Soft stroke for tabs    TabBackgroundSelected = Color3.fromRGB(35, 35, 35), -- Muted blue for selected tabs    TabTextColor = Color3.fromRGB(255, 255, 255), -- White text for tabs    SelectedTabTextColor = Color3.fromRGB(170, 130, 11), -- Updated color (#aa820b)
    -- Elements    ElementBackground = Color3.fromRGB(25, 25, 25), -- Neutral element background    ElementBackgroundHover = Color3.fromRGB(30, 30, 30), -- Slightly brighter on hover    SecondaryElementBackground = Color3.fromRGB(20, 20, 20), -- For secondary elements    ElementStroke = Color3.fromRGB(50, 50, 50), -- Clean stroke    SecondaryElementStroke = Color3.fromRGB(40, 40, 40), -- For secondary elements
    -- Sliders    SliderBackground = Color3.fromRGB(170, 130, 11), -- Updated color (#aa820b)    SliderProgress = Color3.fromRGB(170, 130, 11), -- Updated color (#aa820b)    SliderStroke = Color3.fromRGB(50, 50, 50), -- Stroke for the slider
    -- Toggles    ToggleBackground = Color3.fromRGB(25, 25, 25), -- Toggle base    ToggleEnabled = Color3.fromRGB(170, 130, 11), -- Updated color (#aa820b)    ToggleDisabled = Color3.fromRGB(50, 50, 50), -- Gray for disabled    ToggleEnabledStroke = Color3.fromRGB(60, 60, 60), -- Clean stroke    ToggleDisabledStroke = Color3.fromRGB(40, 40, 40), -- Stroke for disabled    ToggleEnabledOuterStroke = Color3.fromRGB(170, 130, 11), -- Updated color (#aa820b)    ToggleDisabledOuterStroke = Color3.fromRGB(30, 30, 30), -- Faint glow for disabled
    -- Inputs    InputBackground = Color3.fromRGB(25, 25, 25), -- Neutral input background    InputStroke = Color3.fromRGB(50, 50, 50), -- Stroke for input fields
    -- Labels & Paragraphs    LabelBackground = Color3.fromRGB(40, 70, 100), -- Muted blue for labels (#284664)    ParagraphBackground = Color3.fromRGB(40, 70, 100) -- Muted blue for paragraphs (#284664)},
    Discord = {        Enabled = true,        Invite = "ZHpN6hAFnu", -- Replace with your actual Discord invite code        RememberJoins = true    },    KeySystem = false -- No key system required})
-- Create tabslocal MainTab = Window:CreateTab("Main", 13441691835)local SurviTab = Window:CreateTab("Characters", 11537490966)local ESTab = Window:CreateTab("ESP", 16369898431)local ExtrTab = Window:CreateTab("TP", 6723742952)local SigmaTab = Window:CreateTab("Game", 4728059072)local GameTab = Window:CreateTab("Troll", 15782262663)local EvntTab = Window:CreateTab("Info", 8798704474)
local Players = game:GetService("Players")local LocalPlayer = Players.LocalPlayer
Rayfield:Notify({    Title = "Successâœ…!",    Content = "Welcome '" .. LocalPlayer.DisplayName .. "'!",    Duration = 20,    Image = nil,    Actions = {        Close = {            Name = "Close",            Callback = function()                print("Notification closed.")            end        }    }})
game:GetService("UserInputService").JumpRequest:Connect(function()    if infiniteJumpEnabled then        game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")    endend)
MainTab:CreateButton({    Name = "Rejoin",    Callback = function()    local TeleportService = game:GetService("TeleportService")local Players = game:GetService("Players")local LocalPlayer = Players.LocalPlayer local Rejoin = coroutine.create(function()    local Success, ErrorMessage = pcall(function()        TeleportService:Teleport(game.PlaceId, LocalPlayer)    end)     if ErrorMessage and not Success then        warn(ErrorMessage)    endend) coroutine.resume(Rejoin)    end})
MainTab:CreateSection("Local")
local UserInputService = game:GetService("UserInputService")local TweenService = game:GetService("TweenService")local Players = game:GetService("Players")local player = Players.LocalPlayerlocal character = player.Character or player.CharacterAdded:Wait()local humanoid = character:WaitForChild("Humanoid")local camera = workspace.CurrentCamera
-- Variableslocal infiniteJumpEnabled = falselocal inputBeganConnection, inputEndedConnection
-- Infinite Jump Togglelocal infJump = MainTab:CreateToggle({    Name = "Infinite Jump",    Default = false,    Callback = function(state)        infiniteJumpEnabled = state    end})
-- Handle infinite jump logicUserInputService.JumpRequest:Connect(function()    if infiniteJumpEnabled then        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")        if humanoid then            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)        end    endend)
-- Super Sprint ToggleMainTab:CreateToggle({    Name = "Ctrl To Super Sprint",    Default = false,    Callback = function(state)        local normalWalkSpeed = 16        local sprintWalkSpeed = 160        local defaultFOV = 70        local sprintFOV = 100        local tweenTime = 0.5
        local function tweenFOV(targetFOV)            local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)            local goal = {FieldOfView = targetFOV}            local tween = TweenService:Create(camera, tweenInfo, goal)            tween:Play()        end
        local function cleanup()            if inputBeganConnection then                inputBeganConnection:Disconnect()                inputBeganConnection = nil            end            if inputEndedConnection then                inputEndedConnection:Disconnect()                inputEndedConnection = nil            end            humanoid.WalkSpeed = normalWalkSpeed            tweenFOV(defaultFOV)        end
        if state then            inputBeganConnection = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)                if not gameProcessedEvent and input.KeyCode == Enum.KeyCode.LeftControl then                    humanoid.WalkSpeed = sprintWalkSpeed                    tweenFOV(sprintFOV)                end            end)
            inputEndedConnection = UserInputService.InputEnded:Connect(function(input)                if input.KeyCode == Enum.KeyCode.LeftControl then                    humanoid.WalkSpeed = normalWalkSpeed                    tweenFOV(defaultFOV)                end            end)        else            cleanup()        end    end})

MainTab:CreateLabel("Notice: This Is Really Fast.", 107639187292219)
local function resetTabs(tab)    for _, button in ipairs(tab:GetChildren()) do        if button:IsA("GuiButton") then            button:Destroy()        end    endend
local walkSpeedSlider = MainTab:CreateSlider({    Name = "WalkSpeed",    Range = {16, 500},    Increment = 1,    Suffix = "Speed",    CurrentValue = 16,    Callback = function(Value)        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value        handleSpeedChange(Value)    end})
local jumpPowerSlider = MainTab:CreateSlider({    Name = "JumpPower",    Range = {50, 550},    Increment = 1,    Suffix = "JumpPower",    CurrentValue = 50,    Callback = function(Value)        game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value    end})
MainTab:CreateButton({    Name = "Reset Character",    Callback = function()        local args = { "Kill" }        game:GetService("ReplicatedStorage")            :WaitForChild("Events")            :WaitForChild("Game")            :FireServer(unpack(args))    end,})
MainTab:CreateSection("Protection")
local staffProtectionToggle = falselocal staffProtectionConnectionlocal localPlayer = game.Players.LocalPlayer
-- Main toggle for staff protectionlocal protect = MainTab:CreateToggle({    Name = "Leave If Moderator Or Above Joins",    CurrentValue = false,    Callback = function(state)        staffProtectionToggle = state
        local targetUserIDs = {            [2280900504] = true,            [2692448426] = true,            [2606417477] = true,            [333153856] = true,            [2885429800] = true,            [1576309590] = true,            [3306603525] = true,            [1513655551] = true,            [633591158] = true,            [1562662945] = true,            [1920137678] = true,            [176544145] = true,            [3411949622] = true,            [2546818774] = true,            [940191686] = true,            [1138595949] = true,            [203051852] = true,            [2270810010] = true,            [361590181] = true,            [7179270897] = true,            [7864715605] = true        }
        local function kickPlayerIfNeeded(joinedPlayer)            if targetUserIDs[joinedPlayer.UserId] then                localPlayer:Kick("A Moderator Or Above From This Game Has Joined Your Server.")            end        end
        if state then            -- Check existing players            for _, existingPlayer in ipairs(game.Players:GetPlayers()) do                kickPlayerIfNeeded(existingPlayer)            end
            -- Check new players            staffProtectionConnection = game.Players.PlayerAdded:Connect(kickPlayerIfNeeded)        else            if staffProtectionConnection then                staffProtectionConnection:Disconnect()                staffProtectionConnection = nil            end        end    end})
MainTab:CreateLabel("Kicks You From The Game If A Moderator Or Above Joins. (Not guaranteed to detect every staff member that joins)", 107639187292219) MainTab:CreateSection("Extra")
local antiKickConnection
MainTab:CreateToggle({    Name = "Anti-AFK",    Callback = function(state)        if state then            -- Activate Anti-Kick            antiKickConnection = game:GetService("Players").LocalPlayer.Idled:Connect(function()                local VirtualUser = game:GetService("VirtualUser")                VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)                wait(1)                VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)            end)        else            -- Deactivate Anti-Kick            if antiKickConnection then                antiKickConnection:Disconnect()                antiKickConnection = nil            end        end    end})
MainTab:CreateLabel("Prevents AFK Roblox 20 Minute Kick.", 107639187292219)
MainTab:CreateButton({    Name = "Infinite yield",    Callback = function()        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()        end})
MainTab:CreateButton({    Name = "Dex Explorer",    Callback = function()        loadstring(game:HttpGet("https://pastebin.com/raw/Dq7x5HqJ"))()        end})
ESTab:CreateSection("ESP")
local espToggle = falselocal espConnection
ESTab:CreateToggle({    Name = "ESP",    CurrentValue = false,    Callback = function(state)        local Players = game:GetService("Players")        local player = Players.LocalPlayer
        espToggle = state
        if espToggle then            local RunService = game:GetService("RunService")            local Camera = game:GetService("Workspace").CurrentCamera            local LocalPlayer = Players.LocalPlayer
            local function createESP(player)                local character = player.Character                if character and character:FindFirstChild("HumanoidRootPart") then                    local highlight = Instance.new("Highlight", character)                    highlight.Name = "ESP"                    highlight.Adornee = character                    highlight.FillTransparency = 0.5                    highlight.OutlineTransparency = 0                    highlight.FillColor = Color3.fromRGB(255, 94, 19) -- Orange-reddish color                    highlight.OutlineColor = Color3.fromRGB(255, 94, 19) -- Black outline
                    -- Create name tag                    local head = character:FindFirstChild("Head")                    if head then                        local billboardGui = Instance.new("BillboardGui", head)                        billboardGui.Name = "NameTag"                        billboardGui.AlwaysOnTop = true                        billboardGui.Size = UDim2.new(0, 200, 0, 50)                        billboardGui.StudsOffset = Vector3.new(0, 2, 0)
                        local textLabel = Instance.new("TextLabel", billboardGui)                        textLabel.Text = player.Name                        textLabel.Font = Enum.Font.SourceSansBold                        textLabel.TextSize = 14                        textLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- White                        textLabel.BackgroundTransparency = 1                        textLabel.Size = UDim2.new(1, 0, 1, 0)                    end                end            end
            local function updateESP()                for _, player in pairs(Players:GetPlayers()) do                    if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") then                        local esp = player.Character:FindFirstChild("ESP")                        if not esp then                            createESP(player)                        end                    end                end            end
            espConnection = RunService.Heartbeat:Connect(updateESP)        else            if espConnection then                espConnection:Disconnect()            end
            -- Remove all ESP elements            for _, player in pairs(Players:GetPlayers()) do                if player.Character then                    local espOutline = player.Character:FindFirstChild("ESP")                    local nameTag = player.Character:FindFirstChild("Head"):FindFirstChild("NameTag")                    if espOutline then                        espOutline:Destroy()                    end                    if nameTag then                        nameTag:Destroy()                    end                end            end        end    end})
local espToggle = falselocal espConnection
ESTab:CreateToggle({    Name = "Character ESP",    CurrentValue = false,    Callback = function(state)        local Players = game:GetService("Players")        local RunService = game:GetService("RunService")        local LocalPlayer = Players.LocalPlayer
        -- Base colors for each character        local characterColors = {            ["Aphrodite"] = Color3.fromRGB(255, 105, 180), -- Pink            ["Nyx"] = Color3.fromRGB(0, 0, 139), -- Dark blue            ["Hestia"] = Color3.fromRGB(255, 69, 0), -- Orangish-red            ["Persephone"] = Color3.fromRGB(255, 120, 200), -- Pinker            ["Eris"] = Color3.fromRGB(139, 0, 139), -- Darker magenta            ["Queen of the Underworld"] = Color3.fromRGB(199, 21, 133),            ["Gaia"] = Color3.fromRGB(34, 139, 34),            ["Poseidon"] = Color3.fromRGB(0, 105, 148),            ["Hermes"] = Color3.fromRGB(255, 215, 0),            ["Helios"] = Color3.fromRGB(255, 255, 102),            ["Hades"] = Color3.fromRGB(128, 128, 128),            ["Zeus"] = Color3.fromRGB(0, 0, 255),            ["Amphitrite"] = Color3.fromRGB(175, 238, 238),            ["Selene"] = Color3.fromRGB(192, 192, 192),            ["Athena"] = Color3.fromRGB(255, 165, 0),            ["Circe"] = Color3.fromRGB(152, 251, 152),            ["Hera"] = Color3.fromRGB(0, 191, 255),            ["Hecate"] = Color3.fromRGB(75, 0, 130),            ["Iris"] = Color3.fromRGB(255, 255, 255) -- rainbow handled separately        }
        -- Rainbow helper for Iris        local function getRainbowColor(tickTime)            local hue = (tickTime * 0.5 % 1) -- slower, smooth cycle            return Color3.fromHSV(hue, 1, 1)        end
        -- Oscillate brightness for â€œaliveâ€ effect        local function aliveColor(color, time)            local h, s, v = Color3.toHSV(color)            -- Larger, faster oscillation for cute lively effect            v = math.clamp(v * (0.85 + 0.3 * (0.5 + 0.5 * math.sin(time * 3))), 0, 1)            return Color3.fromHSV(h, s, v)        end
        espToggle = state
        if espToggle then            local function createESP(player, textLabelName)                local character = player.Character                if character and character:FindFirstChild("HumanoidRootPart") then                    if not character:FindFirstChild("ESP") then                        local highlight = Instance.new("Highlight", character)                        highlight.Name = "ESP"                        highlight.Adornee = character                        highlight.FillTransparency = 0.5                        highlight.OutlineTransparency = 0                        highlight.FillColor = Color3.fromRGB(128, 128, 128)                        highlight.OutlineColor = Color3.fromRGB(0, 0, 0)                    end
                    local head = character:FindFirstChild("Head")                    if head and not head:FindFirstChild("NameTag") then                        local billboardGui = Instance.new("BillboardGui", head)                        billboardGui.Name = "NameTag"                        billboardGui.AlwaysOnTop = true                        billboardGui.Size = UDim2.new(0, 200, 0, 50)                        billboardGui.StudsOffset = Vector3.new(0, 2, 0)
                        local textLabel = Instance.new("TextLabel", billboardGui)                        textLabel.Text = textLabelName                        textLabel.Font = Enum.Font.SourceSansBold                        textLabel.TextSize = 14                        textLabel.TextColor3 = Color3.fromRGB(128, 128, 128)                        textLabel.BackgroundTransparency = 1                        textLabel.Size = UDim2.new(1, 0, 1, 0)                    end                end            end
            local function updateESP()                for _, player in pairs(Players:GetPlayers()) do                    if player.Character then                        local head = player.Character:FindFirstChild("Head")                        if head then                            local overhead = head:FindFirstChild("OverheadGui")                            local upperText = overhead and overhead:FindFirstChild("UpperText")                            local nameTagText = upperText and upperText.Text
                            if nameTagText then                                createESP(player, nameTagText)
                                local baseColor                                if nameTagText == "Iris" then                                    baseColor = getRainbowColor(tick())                                else                                
